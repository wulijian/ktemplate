{"name":"Ktemplate","tagline":"简单，高效，支持预编译，支持sourcemap的js模版","body":"## 简介\r\nktemplate 是基于 nodejs 的 js 模版引擎。\r\n\r\n它的语法简单，学习成本低，支持预编译，支持子模板，还支持 sourcemap 调试。\r\n\r\n它没有重新定义语法，而是采用了标准的js代码加html代码。\r\n\r\n### 原理\r\n使用 ktemplate 语法的模板，会通过模板引擎的编译，转变成一个js函数，函数包含一个参数 _data。调用该函数，传入数据，返回的是拼凑好的html代码。\r\n\r\n例如：\r\n```HTML\r\n<div id=\"test\">\r\n    hi, <%= hi %><br>\r\n    <a href=\"javascript:void(0)\"><%= hello %></a>\r\n</div>\r\n\r\n```\r\n经过编译，会生成方法：\r\n```Javascript\r\nfunction anonymous(_data) {\r\n    var htmlCode = \"\";\r\n    with (_data || {}) {\r\n        htmlCode += '<div id=\"test\">\\r\\n    hi, ';\r\n        htmlCode += hi;\r\n        htmlCode += '<br>\\r\\n    <a href=\"javascript:void(0)\">';\r\n        htmlCode += hello;\r\n        htmlCode += \"</a>\\r\\n</div>\";\r\n    }\r\n    return htmlCode;\r\n}\r\n```\r\n所以，最终使用的只是js方法，性能问题不需要考虑。\r\n\r\n### 语法\r\n#### 输出\r\n输出标示符会将<%= %>内的正规的js的值，输出到其所在的位置。\r\n\r\n```HTML\r\n<div>\r\n<%= _data.content %>\r\n</div>\r\n```\r\n\r\n如果以上 _data.content = \"hello ktemplate\"; 那么，最终的结果将是：\r\n\r\n```HTML\r\n<div>\r\nhello ktemplate\r\n</div>\r\n```\r\n\r\n#### js语句\r\n<% %>内可以写任何符合的 js 语句，例如：\r\n```HTML\r\n<%var a =3; %>\r\n<%var b=4; %>\r\n<%= a+b %>\r\n```\r\n最终会输出7.\r\n\r\n需要注意的是，每行必须有闭合符号 %>。\r\n\r\n#### 子模板\r\nktemplate 比其他模板还有一个优势，就是支持子模板。 子模板可以保证一个逻辑相关的模板不会太大，以至于很难维护。语法是：<%== url(data) %>。\r\n\r\nurl 代表子模板的相对地址，data是指传给子模板内的数据。\r\n\r\n例如，调用模板的时候，数据如下：\r\n```javascript\r\n{\r\n \"head\":\"这是一个实例\",\r\n  \"content\":{\r\n     \"name\":\"子模板的数据\"\r\n   }\r\n}\r\n```\r\n你建了两个ktemplate模板\r\na.html\r\n```HTML\r\n<%= _data.content.name %>\r\n```\r\n\r\nb.html\r\n```HTML\r\n<%= head %>\r\n<%== ./a(_data.content) %>\r\n```\r\n\r\n其中，b.html 中引用了 a.html 模板，并且将数据的 content属性传给了子模板。最终渲染结果：\r\n```HTML\r\n这是一个实例\r\n子模板的数据\r\n```\r\n### 数据\r\n在 ktemplate 中，为了在写模板的时候省去写 _data 等参数的麻烦，在编译过程中，加入了with(_data){...}。\r\n\r\n优点是可以在套模板的时候省略_data，缺点是with会在运行时添加一层作用域。\r\n\r\n\r\n## Contributors\r\nauthors  : KnightWu","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}